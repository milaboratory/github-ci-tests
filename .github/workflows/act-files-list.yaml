name: "[A] files/list"

on:
  push:
    tags-ignore: [ '*' ]
    branches: [ 'master' ]
    paths:
      - .github/workflows/act-files-list.yaml

  workflow_dispatch:

jobs:
  test-list-files:
    runs-on: ubuntu-latest

    steps:
      - shell: bash
        run: |
          echo "my custom file contents" > ./test-file-1.txt
          echo "" > ./test-file-2.txt
          echo "{}" > ./test-file-2.json
          mkdir "test-dir"
          echo "" > ./test-dir/test-file-3.txt
          echo "{}" > ./test-dir/test-file-3.json
          mkdir "test-dir-2"
          echo "" > test-dir-2/test-file-4.bin

      - id: txt-only
        uses: milaboratory/github-ci/actions/files/list@v4-beta
        with:
          relative: true
          match-directories: false
          implicit-descendants: false
          patterns: |
            **/*.txt

      - id: dirs-only
        uses: milaboratory/github-ci/actions/files/list@v4-beta
        with:
          relative: true
          match-directories: true
          implicit-descendants: false
          patterns: |
            */

      - id: descendants
        uses: milaboratory/github-ci/actions/files/list@v4-beta
        with:
          relative: true
          match-directories: true
          implicit-descendants: true
          patterns: |
            test-dir/

    outputs:
      txt-only: ${{ steps.txt-only.outputs.paths }}
      dirs-only: ${{ steps.dirs-only.outputs.paths }}
      descendants: ${{ steps.descendants.outputs.paths }}

  check:
    runs-on: ubuntu-latest

    needs:
      - test-list-files

    steps:
      - uses: milaboratory/github-ci/actions/action-test@v1
        env:
          TXT_EXPECTED: |-
            ./test-dir/test-file-3.txt
            ./test-file-1.txt
            ./test-file-2.txt
          TXT_ACTUAL: ${{ needs.test-list-files.outputs.txt-only }}

          DIRS_EXPECTED: |-
            ./test-dir
            ./test-dir-2
          DIRS_ACTUAL: ${{ needs.test-list-files.outputs.dirs-only }}

          DESCENDANTS_EXPECTED: |-
            ./test-dir/test-file-3.json
            ./test-dir/test-file-3.txt
          DESCENDANTS_ACTUAL: ${{ needs.test-list-files.outputs.descendants }}

        with:
          test: |
            test_equals "txt files" "${TXT_EXPECTED}" "${TXT_ACTUAL}"
            test_equals "dirs" "${DIRS_EXPECTED}" "${DIRS_ACTUAL}"
            test_equals "descendants" "${DESCENDANTS_EXPECTED}" "${DESCENDANTS_ACTUAL}"
