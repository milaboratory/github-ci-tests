name: "[A] context/<base>"

on:
  push:
    tags-ignore: [ '*' ]
    branches: [ 'master' ]
    paths:
      - .github/workflows/act-context-base.yaml

  workflow_dispatch:

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - uses: milaboratory/github-ci/actions/context/create@v4-beta

  test-put-1:
    runs-on: ubuntu-latest

    needs:
      - init

    steps:
      - uses: milaboratory/github-ci/actions/context/put@v4-beta
        with:
          key: ctx1
          value: ctx-value-1

  test-put-2:
    runs-on: ubuntu-latest

    needs:
      - init

    steps:
      - uses: milaboratory/github-ci/actions/context/put@v4-beta
        with:
          key: ctx2
          value: ctx-value-2

  test-put-3:
    runs-on: ubuntu-latest

    needs:
      - test-put-1
      - test-put-2

    steps:
      - uses: milaboratory/github-ci/actions/context/put@v4-beta
        with:
          key: ctx3
          value: ctx-value-3

  test-get-1:
    runs-on: ubuntu-latest

    needs:
      - test-put-1

    steps:
      - id: data
        uses: milaboratory/github-ci/actions/context/get@v4-beta
        with:
          key: ctx1

    outputs:
      value: ${{ steps.data.outputs.value }}

  test-get-2:
    runs-on: ubuntu-latest

    needs:
      - test-put-2

    steps:
      - id: data
        uses: milaboratory/github-ci/actions/context/get@v4-beta
        with:
          key: ctx2

    outputs:
      value: ${{ steps.data.outputs.value }}

  test-get-3:
    runs-on: ubuntu-latest

    needs:
      - test-put-3

    steps:
      - id: data
        uses: milaboratory/github-ci/actions/context/get@v4-beta
        with:
          key: ctx3

    outputs:
      value: ${{ steps.data.outputs.value }}

  test-get-default:
    runs-on: ubuntu-latest

    needs:
      - init

    steps:
      - id: data
        uses: milaboratory/github-ci/actions/context/get@v4-beta
        with:
          key: ctx-default
          ignore-missing: true
          default-value: ctx-default-value

    outputs:
      value: ${{ steps.data.outputs.value }}

  test-put-race:
    runs-on: ubuntu-latest

    needs:
      - init

    steps:
      - uses: milaboratory/github-ci/actions/context/put@v4-beta
        with:
          key: ctx4
          value: ctx-value-old

      - uses: milaboratory/github-ci/actions/context/put@v4-beta
        continue-on-error: true
        with:
          key: ctx4
          value: ctx-value-new

  test-get-race:
    runs-on: ubuntu-latest

    needs:
      - test-put-race

    steps:
      - id: data
        uses: milaboratory/github-ci/actions/context/get@v4-beta
        with:
          key: ctx4
          default-value: race-default-value

    outputs:
      status: ${{ job.status }}
      value: ${{ steps.data.outputs.value }}

  check:
    runs-on: ubuntu-latest

    if: always()
    needs:
      - test-get-1
      - test-get-2
      - test-get-3
      - test-get-default
      - test-get-race

    steps:
      - name: Test output
        uses: milaboratory/github-ci/actions/action-test@v1

        env:
          EXPECTED_1: ctx-value-1
          ACTUAL_1: ${{ needs.test-get-1.outputs.value }}

          EXPECTED_2: ctx-value-2
          ACTUAL_2: ${{ needs.test-get-2.outputs.value }}

          EXPECTED_3: ctx-value-3
          ACTUAL_3: ${{ needs.test-get-3.outputs.value }}

          EXPECTED_DEFAULT: ctx-default-value
          ACTUAL_DEFAULT: ${{ needs.test-get-default.outputs.value }}

          EXPECTED_RACE_STATUS: 'failure'
          ACTUAL_RACE_STATUS: ${{ needs.test-get-race.outputs.status }}
          EXPECTED_RACE_VALUE: 'race-default-value'
          ACTUAL_RACE_VALUE: ${{ needs.test-get-race.outputs.value }}

        with:
          test: |
            test_equals "Test PUT/GET 1" "${EXPECTED_1}" "${ACTUAL_1}"
            test_equals "Test PUT/GET 2" "${EXPECTED_2}" "${ACTUAL_2}"
            test_equals "Test PUT/GET 3" "${EXPECTED_3}" "${ACTUAL_3}"
            test_equals "Test GET default" "${EXPECTED_DEFAULT}" "${ACTUAL_DEFAULT}"

            test_equals "Test GET race status" "${EXPECTED_RACE_STATUS}" "${ACTUAL_RACE_STATUS}"
            test_equals "Test GET race value" "${EXPECTED_RACE_VALUE}" "${ACTUAL_RACE_VALUE}"
